<?xml version="1.0"?>
<testsuites>
    <testsuite errors="0" failures="1" name="Sanitycheck" skipped="7" tests="390" time="0">
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.thread_alert_handler" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.thread_alert_ignore" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.thread_alert_consumed" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.isr_kinit_alert" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.thread_alert_wait" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.thread_kinit_alert" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.isr_alert_consumed" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.thread_alert_pending" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.thread_alert_timeout" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.thread_alert_default" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.isr_alert_default" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.isr_alert_pending" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.alert" name="kernel.alert.isr_alert_ignore" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.nmi_test_isr" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.byteorder_memcpy_swap" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.version" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.byteorder_mem_swap" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.clock_uptime" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.dlist" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.multilib" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.intmath" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.timeout_order" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.clock_cycle" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.atomic" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.bitfield" time="0">
            <skipped message="Skipped" type="skipped"/>
        </testcase>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.slist" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.printk" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.kernel_ctx_thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.kernel_timer_interrupts" time="0">
            <skipped message="Skipped" type="skipped"/>
        </testcase>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.k_sleep" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.busy_wait" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.kernel_interrupts" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.kernel_thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.kernel_cpu_idle" time="0">
            <skipped message="Skipped" type="skipped"/>
        </testcase>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.kernel_cpu_idle_atomic" time="0">
            <skipped message="Skipped" type="skipped"/>
        </testcase>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.k_yield" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.critical" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common" name="kernel.common.early_sleep" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common.errno" name="kernel.common.errno.thread_context" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common.errno.newlib" name="kernel.common.errno.newlib.thread_context" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common.stack_protection" name="kernel.common.stack_protection.fatal" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common.stack_sentinel" name="kernel.common.stack_sentinel.fatal" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo" name="kernel.fifo.fifo_thread2isr" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo" name="kernel.fifo.fifo_loop" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo" name="kernel.fifo.fifo_isr2thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo" name="kernel.fifo.fifo_is_empty_thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo" name="kernel.fifo.fifo_thread2thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo" name="kernel.fifo.fifo_get_fail" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo" name="kernel.fifo.fifo_cancel_wait" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo" name="kernel.fifo.fifo_is_empty_isr" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.poll" name="kernel.fifo.poll.fifo_loop" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.poll" name="kernel.fifo.poll.fifo_is_empty_thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.poll" name="kernel.fifo.poll.fifo_cancel_wait" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.poll" name="kernel.fifo.poll.fifo_thread2isr" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.poll" name="kernel.fifo.poll.fifo_thread2thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.poll" name="kernel.fifo.poll.fifo_is_empty_isr" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.poll" name="kernel.fifo.poll.fifo_isr2thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.poll" name="kernel.fifo.poll.fifo_get_fail" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout" name="kernel.fifo.timeout.timeout_threads_pend_on_fifo" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout" name="kernel.fifo.timeout.timeout_threads_pend_on_dual_fifos" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout" name="kernel.fifo.timeout.timeout_threads_pend_fail_on_fifo" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout" name="kernel.fifo.timeout.timeout_non_empty_fifo" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout" name="kernel.fifo.timeout.timeout_fifo_thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout" name="kernel.fifo.timeout.timeout_empty_fifo" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout.poll" name="kernel.fifo.timeout.poll.timeout_empty_fifo" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout.poll" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_fifo" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout.poll" name="kernel.fifo.timeout.poll.timeout_threads_pend_on_dual_fifos" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout.poll" name="kernel.fifo.timeout.poll.timeout_non_empty_fifo" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout.poll" name="kernel.fifo.timeout.poll.timeout_fifo_thread" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.timeout.poll" name="kernel.fifo.timeout.poll.timeout_threads_pend_fail_on_fifo" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.usage" name="kernel.fifo.usage.dual_fifo_play" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.usage" name="kernel.fifo.usage.single_fifo_play" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.usage" name="kernel.fifo.usage.isr_fifo_play" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.usage.poll" name="kernel.fifo.usage.poll.single_fifo_play" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.usage.poll" name="kernel.fifo.usage.poll.isr_fifo_play" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fifo.usage.poll" name="kernel.fifo.usage.poll.dual_fifo_play" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.fp_sharing" name="kernel.fp_sharing.load_store_high" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.sleep_wakeup_preemptible" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.priority_preemptible" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.yield_cooperative" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.sleep_cooperative" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.time_slicing_preemptible" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.main" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.priority_cooperative" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.pending_thread_wakeup" time="0"/>
        <testcase classname="nrf52_blenano2:kernel.common.init" name="kernel.common.init.verify_bootdelay" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.prevent_interruption" time="0"/>
        <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.nested_isr" time="0">
            <failure message="failed" type="failure">***** Booting Zephyr OS zephyr-v1.13.0-2375-g9452a1f *****
            Running test suite interrupt_feature
            ===================================================================
            starting test - test_nested_isr
            Triggering irq : 37
            isr0 running !!
            isr0 execution completed !!

                Assertion failed at /tmp/zephyr/tests/kernel/interrupt/src/nested_irq.c:46: isr0: (new_val not equal to old_val)
            Nested interrupt is not working

            Triggering irq : 36
            isr1 ran !!
            FAIL - test_nested_isr
            ===================================================================
            starting test - test_prevent_interruption
            PASS - test_prevent_interruption
            ===================================================================
            Test suite interrupt_feature failed.
            ===================================================================
            PROJECT EXECUTION FAILED
        </failure>
    </testcase>
    <testcase classname="nrf52_blenano2:arch.interrupt" name="arch.interrupt.irq_offload" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo" name="kernel.lifo.lifo_get_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo" name="kernel.lifo.lifo_thread2isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo" name="kernel.lifo.lifo_thread2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo" name="kernel.lifo.lifo_loop" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo" name="kernel.lifo.lifo_isr2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo.usage" name="kernel.lifo.usage.lifo_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo.usage" name="kernel.lifo.usage.lifo_nowait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo.usage" name="kernel.lifo.usage.timeout_lifo_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo.usage" name="kernel.lifo.usage.timeout_empty_lifo" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo.usage" name="kernel.lifo.usage.timeout_non_empty_lifo" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.lifo.usage" name="kernel.lifo.usage.timeout_threads_pend_on_lifo" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_timed_out_mbox_get" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_block_get_buff_to_pool" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_block_get_buff_to_smaller_pool" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_async_put_get_block" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_kinit" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_clean_up_tx_pool" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_put_get_buffer" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_get_waiting_put_incorrect_tid" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_put_get_null" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_target_source_thread_block" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_target_source_thread_buffer" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_async_multiple_put" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_multiple_waiting_get" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_dispose_size_0_msg" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_block_get_invalid_pool" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_incorrect_transmit_tid" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_async_put_to_waiting_get" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_msg_tid_mismatch" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_async_put_get_buffer" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_kdefine" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.mbox_incorrect_receiver_tid" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.msg_receiver" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mailbox" name="kernel.mailbox.msg_receiver_unlimited" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_heap" name="kernel.memory_heap.mheap_malloc_free" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_heap" name="kernel.memory_heap.mheap_malloc_align4" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_heap" name="kernel.memory_heap.mheap_min_block_size" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_heap" name="kernel.memory_heap.mheap_block_desc" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_heap" name="kernel.memory_heap.mheap_calloc" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.pool_block_get_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.pool_malloc" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.pool_block_get_timeout" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.pool_block_get" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_free_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_kdefine_extern" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.sys_heap_mem_pool_assign" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_free_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_size" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_timeout" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_wait_prio" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_parent" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_merge_failed_diff_size" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_alloc_size_roundup" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.mpool_threadsafe" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.sys_mem_pool_min_block_size" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.sys_mem_pool_alloc_free" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_pool" name="kernel.memory_pool.sys_mem_pool_alloc_align4" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.app_memory" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.access_kobject_without_init_with_access" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.kobject_grant_access_kobj" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.create_new_supervisor_thread_from_user" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_invalid_access" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.kobject_access_grant" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.create_new_thread_from_user_huge_stacksize" time="0">
        <skipped message="Skipped" type="skipped"/>
    </testcase>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_remove_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.kobject_revoke_access" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.create_new_essential_thread_from_user" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.kobject_access_invalid_kobject" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_add_partitions_simple" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.create_new_thread_from_user_invalid_stacksize" time="0">
        <skipped message="Skipped" type="skipped"/>
    </testcase>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.kobject_grant_access_kobj_invalid" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.kobject_reinitialize_thread_kobj" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.create_new_higher_prio_thread_from_user" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_remove_partitions_simple" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.thread_has_residual_permissions" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.access_kobject_without_init_access" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_destroy" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.create_new_invalid_prio_thread_from_user" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.syscall_invalid_kobject" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.permission_inheritance" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.kobject_access_grant_to_invalid_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_partitions_supervisor_rw" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_partitions_user_rw" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.create_new_thread_from_user_no_access_stack" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.kobject_release_from_user" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.create_new_thread_from_user" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_add_partitions_invalid" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_valid_access" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.kobject_access_all_grant" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.thread_without_kobject_permission" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_remove_partitions" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.mem_domain_partitions_user_ro" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.obj_validation" name="kernel.memory_protection.obj_validation.generic_object" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.protection" name="kernel.memory_protection.protection.exec_stack" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.protection" name="kernel.memory_protection.protection.write_ro" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.protection" name="kernel.memory_protection.protection.exec_heap" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.protection" name="kernel.memory_protection.protection.write_text" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.protection" name="kernel.memory_protection.protection.exec_data" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.stack_random" name="kernel.memory_protection.stack_random.stack_pt_randomization" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection" name="kernel.memory_protection.stackprot" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.syscalls" name="kernel.memory_protection.syscalls.user_string_copy" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.syscalls" name="kernel.memory_protection.syscalls.user_string_alloc_copy" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.syscalls" name="kernel.memory_protection.syscalls.to_copy" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.syscalls" name="kernel.memory_protection.syscalls.string_nlen" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.user_mode_enter" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.read_priv_stack" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.read_other_stack" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.access_other_memdomain" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.disable_mmu_mpu" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.write_kerntext" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.write_control" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.write_kobject_user_pipe" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.write_priv_stack" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.pass_noperms_object" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.write_kernro" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.pass_user_object" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.revoke_noperms_object" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.read_kernram" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.start_kernel_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.is_usermode" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.access_after_revoke" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.read_kernel_data" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.read_kobject_user_pipe" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.write_kernram" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.write_kernel_data" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_protection.userspace" name="kernel.memory_protection.userspace.write_other_stack" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab_kinit" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab_alloc_free_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab_alloc_timeout" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab_used_get" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab_kdefine_extern" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab_kdefine" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab_alloc_align" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab_alloc_wait_prio" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.memory_slabs" name="kernel.memory_slabs.mslab_threadsafe" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_user_put_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_alloc" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_user_thread_overflow" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_put_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_user_get_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_user_attrs_get" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_thread_overflow" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_user_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_attrs_get" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_purge_when_put" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_user_purge_when_put" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_pend_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_get_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.message_queue" name="kernel.message_queue.msgq_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mutex" name="kernel.mutex.mutex" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mutex" name="kernel.mutex.mutex_reent_lock_forever" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mutex" name="kernel.mutex.mutex_reent_lock_timeout_pass" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mutex" name="kernel.mutex.mutex_reent_lock_timeout_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mutex" name="kernel.mutex.mutex_reent_lock_no_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.mutex" name="kernel.mutex.mutex_lock_unlock" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.object_tracing" name="kernel.object_tracing.obj_tracing" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.object_tracing" name="kernel.object_tracing.philosophers_tracing" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.common.timing" name="kernel.common.timing.pending" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_on_single_elements" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_forever_timeout" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_get_timeout" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_timeout" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_on_multiple_elements" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_forever_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_get_invalid_size" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_get_on_empty_pipe" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_alloc" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_block_put" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_user_thread2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_thread2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.half_pipe_block_put_sema" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_user_put_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_user_get_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_get_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.resource_pool_auto_free" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_get_put" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_reader_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_block_put_sema" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_put_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.half_pipe_get_put" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.pipe" name="kernel.pipe.pipe_block_writer_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.poll" name="kernel.poll.poll_no_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.poll" name="kernel.poll.poll_threadstate" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.poll" name="kernel.poll.poll_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.poll" name="kernel.poll.poll_cancel_main_high_prio" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.poll" name="kernel.poll.poll_cancel_main_low_prio" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.poll" name="kernel.poll.poll_multi" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.profiling" name="kernel.profiling.call_stacks_analyze_main" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.profiling" name="kernel.profiling.call_stacks_analyze_idle" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.profiling" name="kernel.profiling.call_stacks_analyze_workq" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue" name="kernel.queue.queue_get_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue" name="kernel.queue.queue_thread2isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue" name="kernel.queue.queue_thread2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue" name="kernel.queue.queue_loop" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue" name="kernel.queue.queue_isr2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue" name="kernel.queue.queue_get_2threads" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue" name="kernel.queue.queue_alloc" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue" name="kernel.queue.auto_free" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue" name="kernel.queue.queue_supv_to_user" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.queue.poll" name="kernel.queue.poll.arm_irq_vector_table" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.sched.deadline" name="kernel.sched.deadline.deadline" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.sched.preempt" name="kernel.sched.preempt.preempt" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sema_thread2isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sema_reset" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sema_thread2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sema_count_get" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_take_timeout_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_multi_take_timeout_diff_sem" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_multiple_take_and_timeouts" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_measure_timeouts" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_multiple_threads_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_give_take_from_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_take_timeout" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_take_multiple" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_take_no_wait_fails" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.simple_sem_from_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.simple_sem_from_task" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_take_timeout_forever" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_measure_timeout_from_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_take_no_wait" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.semaphore" name="kernel.semaphore.sem_take_timeout_fails" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.common.timing" name="kernel.common.timing.sleep" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.stack" name="kernel.stack.stack_user_thread2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.stack" name="kernel.stack.stack_pop_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.stack" name="kernel.stack.stack_thread2isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.stack" name="kernel.stack.stack_user_pop_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.stack" name="kernel.stack.stack_thread2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.stack" name="kernel.stack.stack_alloc_thread2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.stack.usage" name="kernel.stack.usage.single_stack_play" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.stack.usage" name="kernel.stack.usage.isr_stack_play" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.stack.usage" name="kernel.stack.usage.dual_stack_play" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads.dynamic" name="kernel.threads.dynamic.dyn_thread_perms" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads.dynamic" name="kernel.threads.dynamic.kernel_create_dyn_user_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads.dynamic" name="kernel.threads.dynamic.user_create_dyn_user_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_spawn_priority" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_suspend_resume_cooperative" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_priority_set" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.customdata_get_set_coop" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.queue_get_2threads" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_spawn_params" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_spawn_forever" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_abort_repeat" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.thread_start" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_abort_self" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.customdata_get_set_preempt" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.abort_handler" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.essential_thread_operation" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.queue_get_fail" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_abort_others" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.thread_name_get_set" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.k_thread_foreach" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.delayed_thread_abort" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.user_mode" time="0">
        <skipped message="Skipped" type="skipped"/>
    </testcase>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.queue_isr2thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_spawn_delay" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.systhreads_idle" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.threads_suspend_resume_preemptible" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.systhreads_main" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.kinit_preempt_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.kdefine_coop_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.kdefine_preempt_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.threads" name="kernel.threads.kinit_coop_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.tickless" name="kernel.tickless.tickless_sysclock" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.tickless" name="kernel.tickless.tickless_slice" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer_status_get_anytime" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer_status_get" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer_duration_period" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer_expirefn_null" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer_periodicity" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer_period_0" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer_user_data" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer_status_sync" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer_k_define" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.timer" name="kernel.timer.timer" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_cancel" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_resubmit" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_resubmit_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.resubmit" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.sequence" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue.poll" name="kernel.workqueue.poll.delayed" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue.poll" name="kernel.workqueue.poll.resubmit" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue.poll" name="kernel.workqueue.poll.delayed_cancel" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue.poll" name="kernel.workqueue.poll.sequence" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue.poll" name="kernel.workqueue.poll.delayed_resubmit" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue.poll" name="kernel.workqueue.poll.delayed_resubmit_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.user_workq_granted_access" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_work_submit_to_queue_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_work_submit_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.work_resubmit_to_queue" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_work_cancel_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_work_submit_to_queue_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.work_submit_to_multipleq" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.work_submit_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_work_cancel_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.workq_start_before_submit" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.work_submit_to_queue_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.user_workq_start_before_submit" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_work_cancel_from_queue_isr" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.work_submit_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_work_submit_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.user_workq_granted_access_setup" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.work_submit_to_queue_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.delayed_work_cancel_from_queue_thread" time="0"/>
    <testcase classname="nrf52_blenano2:kernel.workqueue" name="kernel.workqueue.user_work_submit_to_queue_thread" time="0"/>
    <testcase classname="nrf52_blenano2:arch.common.xip" name="arch.common.xip.globals" time="0"/>
</testsuite>
</testsuites>


